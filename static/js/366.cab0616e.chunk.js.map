{"version":3,"file":"static/js/366.cab0616e.chunk.js","mappings":"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","sources":["../node_modules/@web3auth/base-solana-adapter/src/baseSolanaAdapter.ts","../node_modules/@web3auth/phantom-adapter/src/utils.ts","../node_modules/@web3auth/phantom-adapter/src/phantomAdapter.ts"],"sourcesContent":["import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        bs58.encode(signedMessage as Uint8Array),\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!(window as any).solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return (window as any).solana;\n  }\n  const isAvailable = await poll(() => (window as any).solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return (window as any).solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport type PhantomAdapterOptions = BaseAdapterSettings;\n\nexport class PhantomAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.phantomProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<SafeEventEmitterProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) {\n              reject(WalletInitializationError.notInstalled());\n              return;\n            }\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      await super.disconnect();\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<SafeEventEmitterProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n"],"names":["BaseSolanaAdapter","_BaseAdapter","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","wrap","_context","prev","next","this","chainConfig","getChainConfig","CHAIN_NAMESPACES","SOLANA","stop","_x","_authenticateUser","_callee2","_this$chainConfig","chainNamespace","chainId","accounts","existingToken","payload","challenge","encodedMessage","signedMessage","idToken","_context2","provider","status","ADAPTER_STATUS","CONNECTED","WalletLoginError","notConnectedError","request","method","sent","length","getSavedToken","name","checkIfTokenIsExpired","abrupt","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","TextEncoder","encode","params","message","display","verifySignedChallenge","bs58","sessionTime","clientId","web3AuthNetwork","saveToken","_disconnectSession","_callee3","_context3","_get","_getPrototypeOf","prototype","call","clearToken","_disconnect","_callee4","_context4","rehydrated","emit","ADAPTER_EVENTS","DISCONNECTED","BaseAdapter","poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","_ref2","_window$solana","options","_args2","undefined","solana","isPhantom","_window$solana2","PhantomAdapter","_BaseSolanaAdapter","_this2","_defineProperty","_assertThisInitialized","WALLET_ADAPTERS","PHANTOM","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","NOT_READY","_wallet","off","_onDisconnect","READY","get","_this$_wallet","isConnected","_this$phantomProvider","phantomProvider","set","Error","_args3","WalletInitializationError","notInstalled","PhantomInjectedProvider","config","log","debug","autoConnect","connect","t0","error","_connect","_callee5","_this","handleDisconnect","_this3","_context5","CONNECTING","adapter","_handleDisconnect","_ref3","connectWithProvider","once","windowClosed","_len","args","Array","_key","reason","Web3AuthError","connectionError","finish","publicKey","on","t1","ERRORED","_callee6","_this$_wallet2","_args6","_context6","cleanup","disconnect","disconnectionError","_getUserInfo","_callee7","_context7","isWalletConnected","_connectWithProvider","_callee8","injectedProvider","_context8","setupProvider","reconnected"],"sourceRoot":""}