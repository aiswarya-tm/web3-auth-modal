{"version":3,"file":"static/js/501.77713f28.chunk.js","mappings":"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","sources":["../node_modules/@metamask/detect-provider/src/index.ts","../node_modules/@web3auth/base-evm-adapter/src/baseEvmAdapter.ts","../node_modules/@web3auth/metamask-adapter/src/metamaskAdapter.ts"],"sourcesContent":["interface MetaMaskEthereumProvider {\n  isMetaMask?: boolean;\n  once(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  on(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  off(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  addListener(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  removeListener(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  removeAllListeners(event?: string | symbol): this;\n}\n\ninterface Window {\n  ethereum?: MetaMaskEthereumProvider;\n}\n\nexport = detectEthereumProvider;\n\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nfunction detectEthereumProvider<T = MetaMaskEthereumProvider>({\n  mustBeMetaMask = false,\n  silent = false,\n  timeout = 3000,\n} = {}): Promise<T | null> {\n\n  _validateInputs();\n\n  let handled = false;\n\n  return new Promise((resolve) => {\n    if ((window as Window).ethereum) {\n\n      handleEthereum();\n\n    } else {\n\n      window.addEventListener(\n        'ethereum#initialized',\n        handleEthereum,\n        { once: true },\n      );\n\n      setTimeout(() => {\n        handleEthereum();\n      }, timeout);\n    }\n\n    function handleEthereum() {\n\n      if (handled) {\n        return;\n      }\n      handled = true;\n\n      window.removeEventListener('ethereum#initialized', handleEthereum);\n\n      const { ethereum } = window as Window;\n\n      if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n        resolve(ethereum as unknown as T);\n      } else {\n\n        const message = mustBeMetaMask && ethereum\n          ? 'Non-MetaMask window.ethereum detected.'\n          : 'Unable to detect window.ethereum.';\n\n        !silent && console.error('@metamask/detect-provider:', message);\n        resolve(null);\n      }\n    }\n  });\n\n  function _validateInputs() {\n    if (typeof mustBeMetaMask !== 'boolean') {\n      throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);\n    }\n    if (typeof silent !== 'boolean') {\n      throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);\n    }\n    if (typeof timeout !== 'number') {\n      throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);\n    }\n  }\n}\n","import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\n\nexport abstract class BaseEvmAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n    const { chainNamespace, chainId } = this.chainConfig;\n    const accounts = await this.provider.request<string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n\n      const signedMessage = await this.provider.request<string>({\n        method: \"personal_sign\",\n        params: [challenge, accounts[0]],\n      });\n\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        signedMessage as string,\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\ninterface EthereumProvider extends SafeEventEmitterProvider {\n  isMetaMask?: boolean;\n  isConnected: () => boolean;\n  chainId: string;\n}\nexport type MetamaskAdapterOptions = BaseAdapterSettings;\n\nclass MetamaskAdapter extends BaseEvmAdapter<void> {\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly name: string = WALLET_ADAPTERS.METAMASK;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  private metamaskProvider: EthereumProvider | null = null;\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n      return this.metamaskProvider as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this.metamaskProvider = (await detectEthereumProvider({ mustBeMetaMask: true })) as EthereumProvider;\n    if (!this.metamaskProvider) throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n    try {\n      log.debug(\"initializing metamask adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.METAMASK });\n    try {\n      await this.metamaskProvider.request({ method: \"eth_requestAccounts\" });\n      const { chainId } = this.metamaskProvider;\n      if (chainId !== (this.chainConfig as CustomChainConfig).chainId) {\n        await this.switchChain(this.chainConfig as CustomChainConfig);\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n      this.provider.once(\"disconnect\", () => {\n        // ready to be connected again\n        this.disconnect();\n      });\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.METAMASK, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    this.provider?.removeAllListeners();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async switchChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    try {\n      await this.metamaskProvider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: chainConfig.chainId }],\n      });\n    } catch (switchError: unknown) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if ((switchError as { code: number }).code === 4902) {\n        await this.metamaskProvider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: chainConfig.chainId,\n              chainName: chainConfig.displayName,\n              rpcUrls: [chainConfig.rpcTarget],\n              blockExplorerUrls: [chainConfig.blockExplorer],\n              nativeCurrency: {\n                name: chainConfig.tickerName,\n                symbol: chainConfig.ticker,\n                decimals: chainConfig.decimals || 18,\n              },\n            },\n          ],\n        });\n      } else {\n        throw switchError;\n      }\n    }\n  }\n}\n\nexport { MetamaskAdapter };\n"],"names":["module","exports","_ref","arguments","length","undefined","_ref$mustBeMetaMask","mustBeMetaMask","_ref$silent","silent","_ref$timeout","timeout","Error","_validateInputs","handled","Promise","resolve","handleEthereum","window","removeEventListener","ethereum","isMetaMask","message","console","error","addEventListener","once","setTimeout","BaseEvmAdapter","_BaseAdapter","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","wrap","_context","prev","next","this","chainConfig","getChainConfig","CHAIN_NAMESPACES","EIP155","stop","_x","_authenticateUser","_callee2","_this$chainConfig","chainNamespace","chainId","accounts","existingToken","payload","challenge","signedMessage","idToken","_context2","provider","status","ADAPTER_STATUS","CONNECTED","WalletLoginError","notConnectedError","request","method","sent","getSavedToken","name","checkIfTokenIsExpired","abrupt","domain","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","params","verifySignedChallenge","sessionTime","clientId","web3AuthNetwork","saveToken","_disconnectSession","_callee3","_context3","_get","_getPrototypeOf","prototype","call","clearToken","_disconnect","_callee4","_context4","rehydrated","emit","ADAPTER_EVENTS","DISCONNECTED","BaseAdapter","MetamaskAdapter","_BaseEvmAdapter","_this","_defineProperty","_assertThisInitialized","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","WALLET_ADAPTERS","METAMASK","NOT_READY","get","metamaskProvider","set","options","_args","detectEthereumProvider","WalletInitializationError","notInstalled","READY","log","debug","autoConnect","connect","t0","ERRORED","_connect","_this2","CONNECTING","adapter","switchChain","disconnect","reconnected","connectionError","_this$provider","_args3","cleanup","removeAllListeners","_getUserInfo","_switchChain","_callee5","_context5","code","chainName","displayName","rpcUrls","rpcTarget","blockExplorerUrls","blockExplorer","nativeCurrency","tickerName","symbol","ticker","decimals"],"sourceRoot":""}