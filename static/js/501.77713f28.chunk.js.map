{"version":3,"file":"static/js/501.77713f28.chunk.js","mappings":"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","sources":["../node_modules/@metamask/detect-provider/src/index.ts","../node_modules/@web3auth/base-evm-adapter/src/baseEvmAdapter.ts","../node_modules/@web3auth/metamask-adapter/src/metamaskAdapter.ts"],"sourcesContent":["interface MetaMaskEthereumProvider {\n  isMetaMask?: boolean;\n  once(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  on(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  off(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  addListener(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  removeListener(eventName: string | symbol, listener: (...args: any[]) => void): this;\n  removeAllListeners(event?: string | symbol): this;\n}\n\ninterface Window {\n  ethereum?: MetaMaskEthereumProvider;\n}\n\nexport = detectEthereumProvider;\n\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nfunction detectEthereumProvider<T = MetaMaskEthereumProvider>({\n  mustBeMetaMask = false,\n  silent = false,\n  timeout = 3000,\n} = {}): Promise<T | null> {\n\n  _validateInputs();\n\n  let handled = false;\n\n  return new Promise((resolve) => {\n    if ((window as Window).ethereum) {\n\n      handleEthereum();\n\n    } else {\n\n      window.addEventListener(\n        'ethereum#initialized',\n        handleEthereum,\n        { once: true },\n      );\n\n      setTimeout(() => {\n        handleEthereum();\n      }, timeout);\n    }\n\n    function handleEthereum() {\n\n      if (handled) {\n        return;\n      }\n      handled = true;\n\n      window.removeEventListener('ethereum#initialized', handleEthereum);\n\n      const { ethereum } = window as Window;\n\n      if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n        resolve(ethereum as unknown as T);\n      } else {\n\n        const message = mustBeMetaMask && ethereum\n          ? 'Non-MetaMask window.ethereum detected.'\n          : 'Unable to detect window.ethereum.';\n\n        !silent && console.error('@metamask/detect-provider:', message);\n        resolve(null);\n      }\n    }\n  });\n\n  function _validateInputs() {\n    if (typeof mustBeMetaMask !== 'boolean') {\n      throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);\n    }\n    if (typeof silent !== 'boolean') {\n      throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);\n    }\n    if (typeof timeout !== 'number') {\n      throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);\n    }\n  }\n}\n","import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\n\nexport abstract class BaseEvmAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n    const { chainNamespace, chainId } = this.chainConfig;\n    const accounts = await this.provider.request<string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n\n      const signedMessage = await this.provider.request<string>({\n        method: \"personal_sign\",\n        params: [challenge, accounts[0]],\n      });\n\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        signedMessage as string,\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\ninterface EthereumProvider extends SafeEventEmitterProvider {\n  isMetaMask?: boolean;\n  isConnected: () => boolean;\n  chainId: string;\n}\nexport type MetamaskAdapterOptions = BaseAdapterSettings;\n\nclass MetamaskAdapter extends BaseEvmAdapter<void> {\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly name: string = WALLET_ADAPTERS.METAMASK;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  private metamaskProvider: EthereumProvider | null = null;\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n      return this.metamaskProvider as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this.metamaskProvider = (await detectEthereumProvider({ mustBeMetaMask: true })) as EthereumProvider;\n    if (!this.metamaskProvider) throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n    try {\n      log.debug(\"initializing metamask adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.METAMASK });\n    try {\n      await this.metamaskProvider.request({ method: \"eth_requestAccounts\" });\n      const { chainId } = this.metamaskProvider;\n      if (chainId !== (this.chainConfig as CustomChainConfig).chainId) {\n        await this.switchChain(this.chainConfig as CustomChainConfig);\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n      this.provider.once(\"disconnect\", () => {\n        // ready to be connected again\n        this.disconnect();\n      });\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.METAMASK, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    this.provider?.removeAllListeners();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async switchChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    try {\n      await this.metamaskProvider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: chainConfig.chainId }],\n      });\n    } catch (switchError: unknown) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if ((switchError as { code: number }).code === 4902) {\n        await this.metamaskProvider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: chainConfig.chainId,\n              chainName: chainConfig.displayName,\n              rpcUrls: [chainConfig.rpcTarget],\n              blockExplorerUrls: [chainConfig.blockExplorer],\n              nativeCurrency: {\n                name: chainConfig.tickerName,\n                symbol: chainConfig.ticker,\n                decimals: chainConfig.decimals || 18,\n              },\n            },\n          ],\n        });\n      } else {\n        throw switchError;\n      }\n    }\n  }\n}\n\nexport { MetamaskAdapter };\n"],"names":["module","exports","_ref","arguments","length","undefined","_ref$mustBeMetaMask","mustBeMetaMask","_ref$silent","silent","_ref$timeout","timeout","Error","_validateInputs","handled","Promise","resolve","handleEthereum","window","removeEventListener","ethereum","isMetaMask","message","console","error","addEventListener","once","setTimeout","BaseEvmAdapter","_BaseAdapter","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","wrap","_context","prev","next","this","chainConfig","getChainConfig","CHAIN_NAMESPACES","stop","_x","_authenticateUser","_callee2","_this$chainConfig","chainNamespace","chainId","accounts","existingToken","payload","challenge","signedMessage","idToken","_context2","provider","status","ADAPTER_STATUS","WalletLoginError","request","method","sent","getSavedToken","name","checkIfTokenIsExpired","abrupt","domain","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","params","verifySignedChallenge","sessionTime","clientId","web3AuthNetwork","saveToken","_disconnectSession","_callee3","_context3","_get","_getPrototypeOf","prototype","call","clearToken","_disconnect","_callee4","_context4","rehydrated","emit","ADAPTER_EVENTS","BaseAdapter","MetamaskAdapter","_BaseEvmAdapter","_this","_defineProperty","_assertThisInitialized","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","WALLET_ADAPTERS","get","metamaskProvider","set","options","_args","detectEthereumProvider","WalletInitializationError","log","autoConnect","connect","t0","_connect","_this2","adapter","switchChain","disconnect","reconnected","_this$provider","_args3","cleanup","removeAllListeners","_getUserInfo","_switchChain","_callee5","_context5","code","chainName","displayName","rpcUrls","rpcTarget","blockExplorerUrls","blockExplorer","nativeCurrency","tickerName","symbol","ticker","decimals"],"sourceRoot":""}