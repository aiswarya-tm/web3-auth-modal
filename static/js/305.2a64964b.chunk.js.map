{"version":3,"file":"static/js/305.2a64964b.chunk.js","mappings":"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","sources":["../node_modules/@ethereumjs/common/src/common.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/enums.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/common/src/utils.ts","../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/constants.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/eip4844Transaction.ts","../node_modules/@ethereumjs/tx/src/fromRpc.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/kzg/kzg.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@ethereumjs/tx/src/utils/blobHelpers.ts","../node_modules/@ethereumjs/tx/node_modules/@ethereumjs/rlp/src/index.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/ethereumjs-abi-utils.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/crc-32/crc32.js","../node_modules/ethereum-cryptography/sha256.js","../node_modules/ethjs-util/lib/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["import { TypeOutput, intToBuffer, toType } from '@ethereumjs/util'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { EventEmitter } from 'events'\n\nimport * as goerli from './chains/goerli.json'\nimport * as mainnet from './chains/mainnet.json'\nimport * as rinkeby from './chains/rinkeby.json'\nimport * as ropsten from './chains/ropsten.json'\nimport * as sepolia from './chains/sepolia.json'\nimport { EIPs } from './eips'\nimport { Chain, CustomChain, Hardfork } from './enums'\nimport { hardforks as HARDFORK_SPECS } from './hardforks'\nimport { parseGethGenesis } from './utils'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkConfig,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: ChainConfig\n  private _hardfork: string | Hardfork\n  private _eips: number[] = []\n  private _customChains: ChainConfig[]\n\n  private HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork ?? genesisParams.hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this._getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this._getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n   * @param timestamp: timestamp in seconds at which block was/is to be minted\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.Number)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (hf.block !== null && hf.block > blockNumber) ||\n        (timestamp !== undefined && Number(hf.timestamp) > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce((acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc), 0)\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkConfig) => Math.min(Number(hf.timestamp ?? timestamp), acc),\n          timestamp\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @param timestamp\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs !== undefined) {\n        for (const elem of EIPs[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== undefined) return value\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (hfChanges[1][topic] === undefined) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if ((hf['eips'] as number[]).includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (hf['eips'].includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const block = this.hardforkBlock(hardfork)\n    return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Merge) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n\n    let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block\n    currHfTimeOrBlock =\n      currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n        ? Number(currHfTimeOrBlock)\n        : null\n\n    const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n      let hfTimeOrBlock = hf.timestamp ?? hf.block\n      hfTimeOrBlock =\n        hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null\n      return (\n        hf.name !== Hardfork.Merge &&\n        hfTimeOrBlock !== null &&\n        hfTimeOrBlock !== undefined &&\n        hfTimeOrBlock !== currHfTimeOrBlock\n      )\n    })\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    let hfBlock = this.hardforkBlock(hardfork)\n    // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n    // to find the nextHardforkBlock\n    if (hfBlock === null && hardfork === Hardfork.Merge) {\n      const hfs = this.hardforks()\n      const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n      if (mergeIndex < 0) {\n        throw Error(`Merge hardfork should have been found`)\n      }\n      hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name)\n    }\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n      // We need to ignore the merge block in our next hardfork calc\n      const block = BigInt(\n        hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block\n      )\n      // Typescript can't seem to follow that the hfBlock is not null at this point\n      return block > hfBlock! && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isNextHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const nextHardforkBlock = this.nextHardforkBlock(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork, genesisHash: Buffer) {\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlockOrTime = 0\n    for (const hf of this.hardforks()) {\n      const { block, timestamp, name } = hf\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp ?? block\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof blockOrTime === 'number' &&\n        blockOrTime !== 0 &&\n        blockOrTime !== prevBlockOrTime &&\n        name !== Hardfork.Merge\n      ) {\n        const hfBlockBuffer = Buffer.from(blockOrTime.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n        prevBlockOrTime = blockOrTime\n      }\n\n      if (hf.name === hardfork) break\n    }\n    const inputBuffer = Buffer.concat([genesisHash, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Buffer): string {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (\n      data === null ||\n      (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n    ) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Buffer) {\n    for (const hf of this.hardforks()) {\n      const blockOrTime = hf.timestamp ?? hf.block\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n\n  static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { mainnet, ropsten, rinkeby, goerli, sepolia } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n","export const EIPs: { [key: number]: any } = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3074: require('./3074.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  4844: require('./4844.json'),\n  4895: require('./4895.json'),\n  5133: require('./5133.json'),\n}\n","export enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n  ShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n","export const hardforks = {\n  chainstart: require('./chainstart.json'),\n  homestead: require('./homestead.json'),\n  dao: require('./dao.json'),\n  tangerineWhistle: require('./tangerineWhistle.json'),\n  spuriousDragon: require('./spuriousDragon.json'),\n  byzantium: require('./byzantium.json'),\n  constantinople: require('./constantinople.json'),\n  petersburg: require('./petersburg.json'),\n  istanbul: require('./istanbul.json'),\n  muirGlacier: require('./muirGlacier.json'),\n  berlin: require('./berlin.json'),\n  london: require('./london.json'),\n  shanghai: require('./shanghai.json'),\n  arrowGlacier: require('./arrowGlacier.json'),\n  grayGlacier: require('./grayGlacier.json'),\n  mergeForkIdTransition: require('./mergeForkIdTransition.json'),\n  merge: require('./merge.json'),\n  shardingFork: require('./sharding.json'),\n}\n","export * from './common'\nexport * from './enums'\nexport * from './types'\nexport * from './utils'\n","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const {\n    name,\n    config,\n    difficulty,\n    mixHash,\n    gasLimit,\n    coinbase,\n    baseFeePerGas,\n  }: {\n    name: string\n    config: any\n    difficulty: string\n    mixHash: string\n    gasLimit: string\n    coinbase: string\n    baseFeePerGas: string\n  } = json\n  let { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n    json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId }: { chainId: number } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n      difficulty: parseInt(difficulty),\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n    },\n    hardfork: undefined as string | undefined,\n    hardforks: [] as ConfigHardfork[],\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n    [Hardfork.ShardingForkDev]: { name: 'shardingForkTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n          ? null\n          : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n          ? config[nameBlock]\n          : undefined,\n    }))\n    .filter((fork) => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[]\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Merge,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // Merge hardfork has to be placed before first hardfork that is dependent on merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) => forkMap[hf.name]?.postMerge === true\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork)\n    } else {\n      params.hardforks.push(mergeConfig as unknown as ConfigHardfork)\n    }\n  }\n\n  const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined\n  params.hardfork = latestHardfork?.name\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    if (['config', 'difficulty', 'gasLimit', 'alloc'].some((field) => !(field in json))) {\n      throw new Error('Invalid format, expected geth genesis fields missing')\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n","import { Chain, Common, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  MAX_INTEGER,\n  MAX_UINT64,\n  SECP256K1_ORDER_DIV_2,\n  bufferToBigInt,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n  unpadBuffer,\n} from '@ethereumjs/util'\n\nimport { Capability } from './types'\nimport { checkMaxInitCodeSize } from './util'\n\nimport type {\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxData,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: bigint\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: bigint\n  public readonly gasLimit: bigint\n  public readonly to?: Address\n  public readonly value: bigint\n  public readonly data: Buffer\n\n  public readonly v?: bigint\n  public readonly r?: bigint\n  public readonly s?: bigint\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Merge\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = Number(bufferToBigInt(toBuffer(type)))\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = bufferToBigInt(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = bufferToBigInt(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = bufferToBigInt(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? bufferToBigInt(vB) : undefined\n    this.r = rB.length > 0 ? bufferToBigInt(rB) : undefined\n    this.s = sB.length > 0 ? bufferToBigInt(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n\n    const createContract = this.to === undefined || this.to === null\n    const allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false\n    const common = opts.common ?? this._getCommon()\n    if (createContract && common.isActivatedEIP(3860) && allowUnlimitedInitCodeSize === false) {\n      checkMaxInitCodeSize(common, this.data.length)\n    }\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee() > this.gasLimit) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  protected _validateYParity() {\n    const { v } = this\n    if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n   * Reasoning: https://ethereum.stackexchange.com/a/55728\n   */\n  protected _validateHighS() {\n    const { s } = this\n    if (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): bigint {\n    const txFee = this.common.param('gasPrices', 'tx')\n    let fee = this.getDataFee()\n    if (txFee) fee += txFee\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      const txCreationFee = this.common.param('gasPrices', 'txCreation')\n      if (txCreationFee) fee += txCreationFee\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost = BigInt(0)\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = BigInt(Math.ceil(this.data.length / 32))\n      const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength\n      cost += initCodeCost\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): bigint\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (v === undefined || r === undefined || s === undefined) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: bigint, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BigIntLike) {\n    // Chain ID provided\n    if (chainId !== undefined) {\n      const chainIdBigInt = bufferToBigInt(toBuffer(chainId))\n      if (common) {\n        if (common.chainId() !== chainIdBigInt) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBigInt)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.custom(\n            {\n              name: 'custom-chain',\n              networkId: chainIdBigInt,\n              chainId: chainIdBigInt,\n            },\n            { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BigInt values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BigInt values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: bigint | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_UINT64) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_UINT64) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  protected static _validateNotArray(values: { [key: string]: any }) {\n    const txDataKeys = [\n      'nonce',\n      'gasPrice',\n      'gasLimit',\n      'to',\n      'value',\n      'data',\n      'v',\n      'r',\n      's',\n      'type',\n      'baseFee',\n      'maxFeePerGas',\n      'chainId',\n    ]\n    for (const [key, value] of Object.entries(values)) {\n      if (txDataKeys.includes(key)) {\n        if (Array.isArray(value)) {\n          throw new Error(`${key} cannot be an array`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","/** EIP4844 constants */\n\nexport const MAX_CALLDATA_SIZE = 16777216 // 2 ** 24\nexport const MAX_ACCESS_LIST_SIZE = 16777216 // 2 ** 24\nexport const MAX_VERSIONED_HASHES_LIST_SIZE = 16777216 // 2 ** 24\nexport const LIMIT_BLOBS_PER_TX = 16777216 // 2 ** 24\nexport const MAX_TX_WRAP_KZG_COMMITMENTS = 16777216 // 2 ** 24\nexport const FIELD_ELEMENTS_PER_BLOB = 4096 // This is also in the Common 4844 parameters but needed here since types can't access Common params\nexport const BYTES_PER_FIELD_ELEMENT = 32\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(serialized.slice(1)))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBuffer(this.maxFeePerGas),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized.slice(1))))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = bufferToBigInt(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { byteArrayEquals } from '@chainsafe/ssz'\nimport {\n  Address,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufferToBigInt,\n  bufferToHex,\n  ecrecover,\n  toBuffer,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { LIMIT_BLOBS_PER_TX } from './constants'\nimport { kzg } from './kzg/kzg'\nimport {\n  BlobNetworkTransactionWrapper,\n  BlobTransactionType,\n  SignedBlobTransactionType,\n} from './types'\nimport { AccessLists, blobTxToNetworkWrapperDataFormat } from './util'\nimport { computeVersionedHash } from './utils/blobHelpers'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListBufferItem,\n  BlobEIP4844TxData,\n  JsonTx,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { ValueOf } from '@chainsafe/ssz'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0x05\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\nconst validateBlobTransactionNetworkWrapper = (\n  versionedHashes: Uint8Array[],\n  blobs: Uint8Array[],\n  commitments: Uint8Array[],\n  kzgProof: Uint8Array,\n  version: number\n) => {\n  if (!(versionedHashes.length === blobs.length && blobs.length === commitments.length)) {\n    throw new Error('Number of versionedHashes, blobs, and commitments not all equal')\n  }\n  try {\n    kzg.verifyAggregateKzgProof(blobs, commitments, kzgProof)\n  } catch (e) {\n    throw new Error('KZG proof cannot be verified from blobs/commitments')\n  }\n\n  for (let x = 0; x < versionedHashes.length; x++) {\n    const computedVersionedHash = computeVersionedHash(commitments[x], version)\n    if (!byteArrayEquals(computedVersionedHash, versionedHashes[x])) {\n      throw new Error(`commitment for blob at index ${x} does not match versionedHash`)\n    }\n  }\n}\n\n/**\n * Typed transaction with a new gas fee market mechanism for transactions that include \"blobs\" of data\n *\n * - TransactionType: 5\n * - EIP: [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)\n */\nexport class BlobEIP4844Transaction extends BaseTransaction<BlobEIP4844Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n  public readonly maxFeePerDataGas: bigint\n\n  public readonly common: Common\n  public versionedHashes: Buffer[]\n  blobs?: Buffer[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  kzgCommitments?: Buffer[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  aggregateKzgProof?: Buffer // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static constructors or factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  constructor(txData: BlobEIP4844TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas, maxFeePerDataGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n\n    if (this.common.isActivatedEIP(4844) === false) {\n      throw new Error('EIP-4844 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this.maxFeePerDataGas = bufferToBigInt(\n      toBuffer((maxFeePerDataGas ?? '') === '' ? '0x' : maxFeePerDataGas)\n    )\n\n    this.versionedHashes = (txData.versionedHashes ?? []).map((vh) => toBuffer(vh))\n    this._validateYParity()\n    this._validateHighS()\n\n    for (const hash of this.versionedHashes) {\n      if (hash.length !== 32) {\n        const msg = this._errorMsg('versioned hash is invalid length')\n        throw new Error(msg)\n      }\n      if (\n        BigInt(hash[0]) !== this.common.paramByEIP('sharding', 'blobCommitmentVersionKzg', 4844)\n      ) {\n        const msg = this._errorMsg('versioned hash does not start with KZG commitment version')\n        throw new Error(msg)\n      }\n    }\n    if (this.versionedHashes.length > LIMIT_BLOBS_PER_TX) {\n      const msg = this._errorMsg(`tx can contain at most ${LIMIT_BLOBS_PER_TX} blobs`)\n      throw new Error(msg)\n    }\n\n    this.blobs = txData.blobs?.map((blob) => toBuffer(blob))\n    this.kzgCommitments = txData.kzgCommitments?.map((commitment) => toBuffer(commitment))\n    this.aggregateKzgProof = toBuffer(txData.kzgProof)\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  public static fromTxData(txData: BlobEIP4844TxData, opts?: TxOptions) {\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates the minimal representation of a blob transaction from the network wrapper version.\n   * The minimal representation is used when adding transactions to an execution payload/block\n   * @param txData a {@link BlobEIP4844Transaction} containing optional blobs/kzg commitments\n   * @param opts - dictionary of {@link TxOptions}\n   * @returns the \"minimal\" representation of a BlobEIP4844Transaction (i.e. transaction object minus blobs and kzg commitments)\n   */\n  public static minimalFromNetworkWrapper(txData: BlobEIP4844Transaction, opts?: TxOptions) {\n    const tx = BlobEIP4844Transaction.fromTxData(\n      {\n        ...txData,\n        ...{ blobs: undefined, kzgCommitments: undefined, kzgProof: undefined },\n      },\n      opts\n    )\n    return tx\n  }\n\n  /**\n   * Creates a transaction from the network encoding of a blob transaction (with blobs/commitments/proof)\n   * @param serialized a buffer representing a serialized BlobTransactionNetworkWrapper\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   * @throws if no KZG library is loaded -- using the `initKzg` helper method -- or if `opts.common` not provided\n   */\n  public static fromSerializedBlobTxNetworkWrapper(\n    serialized: Buffer,\n    opts?: TxOptions\n  ): BlobEIP4844Transaction {\n    if (!opts || !opts.common) {\n      throw new Error('common instance required to validate versioned hashes')\n    }\n    // Validate network wrapper\n    const wrapper = BlobNetworkTransactionWrapper.deserialize(serialized.slice(1))\n    const decodedTx = wrapper.tx.message\n    const version = Number(opts.common.paramByEIP('sharding', 'blobCommitmentVersionKzg', 4844))\n    validateBlobTransactionNetworkWrapper(\n      decodedTx.blobVersionedHashes,\n      wrapper.blobs,\n      wrapper.blobKzgs,\n      wrapper.kzgAggregatedProof,\n      version\n    )\n\n    const accessList: AccessListBuffer = []\n    for (const listItem of decodedTx.accessList) {\n      const address = Buffer.from(listItem.address)\n      const storageKeys = listItem.storageKeys.map((key) => Buffer.from(key))\n      const accessListItem: AccessListBufferItem = [address, storageKeys]\n      accessList.push(accessListItem)\n    }\n\n    const to =\n      decodedTx.to.value === null\n        ? undefined\n        : Address.fromString(bufferToHex(Buffer.from(decodedTx.to.value)))\n\n    const versionedHashes = decodedTx.blobVersionedHashes.map((el) => Buffer.from(el))\n    const commitments = wrapper.blobKzgs.map((el) => Buffer.from(el))\n    const blobs = wrapper.blobs.map((el) => Buffer.from(el))\n    const txData = {\n      ...decodedTx,\n      ...{\n        versionedHashes,\n        accessList,\n        to,\n        blobs,\n        kzgCommitments: commitments,\n        kzgProof: Buffer.from(wrapper.kzgAggregatedProof),\n        r: wrapper.tx.signature.r,\n        s: wrapper.tx.signature.s,\n        v: BigInt(wrapper.tx.signature.yParity),\n        gasLimit: decodedTx.gas,\n        maxFeePerGas: decodedTx.maxFeePerGas,\n        maxPriorityFeePerGas: decodedTx.maxPriorityFeePerGas,\n      },\n    } as BlobEIP4844TxData\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates a transaction from the \"minimal\" encoding of a blob transaction (without blobs/commitments/kzg proof)\n   * @param serialized a buffer representing a serialized signed blob transaction\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   */\n  public static fromSerializedTx(serialized: Buffer, opts?: TxOptions) {\n    const decoded = SignedBlobTransactionType.deserialize(serialized.slice(1))\n    const tx = decoded.message\n    const accessList: AccessListBuffer = []\n    for (const listItem of tx.accessList) {\n      const address = Buffer.from(listItem.address)\n      const storageKeys = listItem.storageKeys.map((key) => Buffer.from(key))\n      const accessListItem: AccessListBufferItem = [address, storageKeys]\n      accessList.push(accessListItem)\n    }\n    const to =\n      tx.to.value === null ? undefined : Address.fromString(bufferToHex(Buffer.from(tx.to.value)))\n    const versionedHashes = tx.blobVersionedHashes.map((el) => Buffer.from(el))\n    const txData = {\n      ...tx,\n      ...{\n        versionedHashes,\n        to,\n        accessList,\n        r: decoded.signature.r,\n        s: decoded.signature.s,\n        v: BigInt(decoded.signature.yParity),\n        gasLimit: decoded.message.gas,\n      },\n    } as BlobEIP4844TxData\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * This method is not implemented for blob transactions as the `raw` method is used exclusively with\n   * rlp encoding and these transactions use SSZ for serialization.\n   */\n  raw(): TxValuesArray {\n    throw new Error('Method not implemented.')\n  }\n\n  toValue(): ValueOf<typeof SignedBlobTransactionType> {\n    const to = {\n      selector: this.to !== undefined ? 1 : 0,\n      value: this.to?.toBuffer() ?? null,\n    }\n    return {\n      message: {\n        chainId: this.common.chainId(),\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gas: this.gasLimit,\n        to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList.map((listItem) => {\n          return { address: listItem[0], storageKeys: listItem[1] }\n        }),\n        blobVersionedHashes: this.versionedHashes,\n        maxFeePerDataGas: this.maxFeePerDataGas,\n      },\n      // TODO: Decide how to serialize an unsigned transaction\n      signature: {\n        r: this.r ?? BigInt(0),\n        s: this.s ?? BigInt(0),\n        yParity: this.v === BigInt(1) ? true : false,\n      },\n    }\n  }\n\n  /**\n   * Serialize a blob transaction to the execution payload variant\n   * @returns the minimum (execution payload) serialization of a signed transaction\n   */\n  serialize(): Buffer {\n    const sszEncodedTx = SignedBlobTransactionType.serialize(this.toValue())\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, sszEncodedTx])\n  }\n\n  /**\n   * @returns the serialized form of a blob transaction in the network wrapper format (used for gossipping mempool transactions over devp2p)\n   */\n  serializeNetworkWrapper(): Buffer {\n    if (\n      this.blobs === undefined ||\n      this.kzgCommitments === undefined ||\n      this.aggregateKzgProof === undefined\n    ) {\n      throw new Error(\n        'cannot serialize network wrapper without blobs, KZG commitments and aggregate KZG proof provided'\n      )\n    }\n    const to = {\n      selector: this.to !== undefined ? 1 : 0,\n      value: this.to?.toBuffer() ?? null,\n    }\n\n    const blobArrays = this.blobs?.map((blob) => Uint8Array.from(blob)) ?? []\n    const serializedTxWrapper = BlobNetworkTransactionWrapper.serialize({\n      blobs: blobArrays,\n      blobKzgs: this.kzgCommitments?.map((commitment) => Uint8Array.from(commitment)) ?? [],\n      tx: { ...blobTxToNetworkWrapperDataFormat(this), ...to },\n      kzgAggregatedProof: Uint8Array.from(this.aggregateKzgProof ?? []),\n    })\n    return Buffer.concat([Buffer.from([0x05]), serializedTxWrapper])\n  }\n\n  getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  getMessageToSign(hashMessage?: true | undefined): Buffer\n  getMessageToSign(_hashMessage?: unknown): Buffer | Buffer[] {\n    return this.unsignedHash()\n  }\n\n  /**\n   * Returns the hash of a blob transaction\n   */\n  unsignedHash(): Buffer {\n    const serializedTx = BlobTransactionType.serialize(this.toValue().message)\n    return Buffer.from(keccak256(Buffer.concat([TRANSACTION_TYPE_BUFFER, serializedTx])))\n  }\n\n  hash(): Buffer {\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n      maxFeePerDataGas: bigIntToHex(this.maxFeePerDataGas),\n      versionedHashes: this.versionedHashes.map((hash) => bufferToHex(hash)),\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer): BlobEIP4844Transaction {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return BlobEIP4844Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n        maxFeePerDataGas: this.maxFeePerDataGas,\n        versionedHashes: this.versionedHashes,\n        blobs: this.blobs,\n        kzgCommitments: this.kzgCommitments,\n        kzgProof: this.aggregateKzgProof,\n      },\n      opts\n    )\n  }\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n\n  /**\n   * @returns the number of blobs included with this transaction\n   */\n  public numBlobs() {\n    return this.versionedHashes.length\n  }\n}\n","import { TypeOutput, setLengthLeft, toBuffer, toType } from '@ethereumjs/util'\n\nimport type { TxData } from './types'\n\nexport const normalizeTxParams = (_txParams: any): TxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBuffer(txParams.to), 20)\n      : null\n\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s\n\n  if (txParams.v !== '0x') {\n    txParams.v = toType(txParams.v, TypeOutput.BigInt)\n  }\n\n  return txParams\n}\n","export { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport { AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { BlobEIP4844Transaction } from './eip4844Transaction'\nexport { initKZG, kzg } from './kzg/kzg'\nexport { Transaction } from './legacyTransaction'\nexport { TransactionFactory } from './transactionFactory'\nexport * from './types'\nexport { computeVersionedHash } from './utils/blobHelpers'\n","import type { Kzg } from '../depInterfaces'\n\nfunction kzgNotLoaded(): never {\n  throw Error('kzg library not loaded')\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let kzg: Kzg = {\n  freeTrustedSetup: kzgNotLoaded,\n  loadTrustedSetup: kzgNotLoaded,\n  blobToKzgCommitment: kzgNotLoaded,\n  computeAggregateKzgProof: kzgNotLoaded,\n  verifyKzgProof: kzgNotLoaded,\n  verifyAggregateKzgProof: kzgNotLoaded,\n}\n\n/**\n * @param kzgLib a KZG implementation (defaults to c-kzg)\n * @param trustedSetupPath the full path (e.g. \"/home/linux/devnet4.txt\") to a kzg trusted setup text file\n */\nexport function initKZG(kzgLib: Kzg, trustedSetupPath: string) {\n  kzg = kzgLib\n  kzg.loadTrustedSetup(trustedSetupPath)\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { Capability } from './types'\n\nimport type { JsonTx, TxData, TxOptions, TxValuesArray } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n  const v = Number(_v)\n  const chainIdDoubled = Number(chainId) * 2\n  return v === chainIdDoubled + 35 || v === chainIdDoubled + 36\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized))) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = bufferToBigInt(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        // v and chain ID meet EIP-155 conditions\n        if (meetsEIP155(this.v!, this.common.chainId())) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainId()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { bufArrToArr } from '@ethereumjs/util'\n   * import { RLP } from '@ethereumjs/rlp'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = Buffer.from(RLP.encode(bufArrToArr(message))) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainId() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      v += this.common.chainId() * BigInt(2) + BigInt(8)\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v,\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(_v?: bigint, common?: Common): Common {\n    let chainIdBigInt\n    const v = _v !== undefined ? Number(_v) : undefined\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v < 37 && v !== 27 && v !== 28) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      v !== 0 &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      v !== 27 &&\n      v !== 28\n    ) {\n      if (common) {\n        if (!meetsEIP155(BigInt(v), common.chainId())) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if ((v - 35) % 2 === 0) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBigInt = BigInt(v - numSub) / BigInt(2)\n      }\n    }\n    return this._getCommon(common, chainIdBigInt)\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { bufferToBigInt, fetchFromProvider, getProvider, toBuffer } from '@ethereumjs/util'\n\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { BlobEIP4844Transaction } from './eip4844Transaction'\nimport { normalizeTxParams } from './fromRpc'\nimport { Transaction } from './legacyTransaction'\n\nimport type {\n  AccessListEIP2930TxData,\n  BlobEIP4844TxData,\n  FeeMarketEIP1559TxData,\n  TxData,\n  TxOptions,\n  TypedTransaction,\n} from './types'\n\nexport class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData | BlobEIP4844TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = Number(bufferToBigInt(toBuffer(txData.type)))\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else if (txType === 5) {\n        return BlobEIP4844Transaction.fromTxData(<BlobEIP4844TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      switch (data[0]) {\n        case 1:\n          return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n        case 2:\n          return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n        case 5:\n          return BlobEIP4844Transaction.fromSerializedTx(data, txOptions)\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   *  Method to retrieve a transaction from the provider\n   * @param provider - An Ethers JsonRPCProvider\n   * @param txHash - Transaction hash\n   * @param txOptions - The transaction options\n   * @returns the transaction specified by `txHash`\n   */\n  public static async fromEthersProvider(\n    provider: string | any,\n    txHash: string,\n    txOptions?: TxOptions\n  ) {\n    const prov = getProvider(provider)\n    const txData = await fetchFromProvider(prov, {\n      method: 'eth_getTransactionByHash',\n      params: [txHash],\n    })\n    if (txData === null) {\n      throw new Error('No data returned from provider')\n    }\n    return TransactionFactory.fromRPCTx(txData, txOptions)\n  }\n\n  /**\n   * Method to decode data retrieved from RPC, such as `eth_getTransactionByHash`\n   * Note that this normalizes some of the parameters\n   * @param txData The RPC-encoded data\n   * @param txOptions The transaction options\n   * @returns\n   */\n  public static async fromRPCTx(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData | BlobEIP4844TxData,\n    txOptions: TxOptions = {}\n  ) {\n    return TransactionFactory.fromTxData(normalizeTxParams(txData), txOptions)\n  }\n}\n","import {\n  BooleanType,\n  ByteListType,\n  ByteVectorType,\n  ContainerType,\n  ListCompositeType,\n  NoneType,\n  UintBigintType,\n  UnionType,\n} from '@chainsafe/ssz'\n\nimport {\n  BYTES_PER_FIELD_ELEMENT,\n  FIELD_ELEMENTS_PER_BLOB,\n  LIMIT_BLOBS_PER_TX,\n  MAX_ACCESS_LIST_SIZE,\n  MAX_CALLDATA_SIZE,\n  MAX_TX_WRAP_KZG_COMMITMENTS,\n  MAX_VERSIONED_HASHES_LIST_SIZE,\n} from './constants'\n\nimport type { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport type { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport type { BlobEIP4844Transaction } from './eip4844Transaction'\nimport type { Transaction } from './legacyTransaction'\nimport type { Common } from '@ethereumjs/common'\nimport type { AddressLike, BigIntLike, BufferLike, PrefixedHexString } from '@ethereumjs/util'\n\nconst Bytes20 = new ByteVectorType(20)\nconst Bytes32 = new ByteVectorType(32)\nconst Bytes48 = new ByteVectorType(48)\n\nconst Uint64 = new UintBigintType(8)\nconst Uint256 = new UintBigintType(32)\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechanism\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n\n  /**\n   * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n   * Gas cost for initcode size analysis will still be charged. Use with caution.\n   */\n  allowUnlimitedInitCodeSize?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n  | BlobEIP4844Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BigIntLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BigIntLike | null\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BigIntLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BigIntLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BigIntLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BigIntLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BigIntLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList | null\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never | null\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BigIntLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BigIntLike\n}\n\n/**\n * {@link BlobEIP4844Transaction} data.\n */\nexport interface BlobEIP4844TxData extends FeeMarketEIP1559TxData {\n  /**\n   * The versioned hashes used to validate the blobs attached to a transaction\n   */\n  versionedHashes?: BufferLike[]\n  /**\n   * The maximum fee per data gas paid for the transaction\n   */\n  maxFeePerDataGas?: BigIntLike\n  /**\n   * The blobs associated with a transaction\n   */\n  blobs?: BufferLike[]\n  /**\n   * The KZG commitments corresponding to the versioned hashes for each blob\n   */\n  kzgCommitments?: BufferLike[]\n  /**\n   * The aggregate KZG proof associated with the transaction\n   */\n  kzgProof?: BufferLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n  maxFeePerDataGas?: string\n  versionedHashes?: string[]\n}\n\n/*\n * Based on https://ethereum.org/en/developers/docs/apis/json-rpc/\n */\nexport interface JsonRpcTx {\n  blockHash: string | null // DATA, 32 Bytes - hash of the block where this transaction was in. null when it's pending.\n  blockNumber: string | null // QUANTITY - block number where this transaction was in. null when it's pending.\n  from: string // DATA, 20 Bytes - address of the sender.\n  gas: string // QUANTITY - gas provided by the sender.\n  gasPrice: string // QUANTITY - gas price provided by the sender in wei. If EIP-1559 tx, defaults to maxFeePerGas.\n  maxFeePerGas?: string // QUANTITY - max total fee per gas provided by the sender in wei.\n  maxPriorityFeePerGas?: string // QUANTITY - max priority fee per gas provided by the sender in wei.\n  type: string // QUANTITY - EIP-2718 Typed Transaction type\n  accessList?: JsonTx['accessList'] // EIP-2930 access list\n  chainId?: string // Chain ID that this transaction is valid on.\n  hash: string // DATA, 32 Bytes - hash of the transaction.\n  input: string // DATA - the data send along with the transaction.\n  nonce: string // QUANTITY - the number of transactions made by the sender prior to this one.\n  to: string | null /// DATA, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\n  transactionIndex: string | null // QUANTITY - integer of the transactions index position in the block. null when it's pending.\n  value: string // QUANTITY - value transferred in Wei.\n  v: string // QUANTITY - ECDSA recovery id\n  r: string // DATA, 32 Bytes - ECDSA signature r\n  s: string // DATA, 32 Bytes - ECDSA signature s\n  maxFeePerDataGas?: string // QUANTITY - max data fee for blob transactions\n  versionedHashes?: string[] // DATA - array of 32 byte versioned hashes for blob transactions\n}\n\n/** EIP4844 types */\nexport const AddressType = Bytes20 // SSZ encoded address\n\n// SSZ encoded container for address and storage keys\nexport const AccessTupleType = new ContainerType({\n  address: AddressType,\n  storageKeys: new ListCompositeType(Bytes32, MAX_VERSIONED_HASHES_LIST_SIZE),\n})\n\n// SSZ encoded blob transaction\nexport const BlobTransactionType = new ContainerType({\n  chainId: Uint256,\n  nonce: Uint64,\n  maxPriorityFeePerGas: Uint256,\n  maxFeePerGas: Uint256,\n  gas: Uint64,\n  to: new UnionType([new NoneType(), AddressType]),\n  value: Uint256,\n  data: new ByteListType(MAX_CALLDATA_SIZE),\n  accessList: new ListCompositeType(AccessTupleType, MAX_ACCESS_LIST_SIZE),\n  maxFeePerDataGas: Uint256,\n  blobVersionedHashes: new ListCompositeType(Bytes32, MAX_VERSIONED_HASHES_LIST_SIZE),\n})\n\n// SSZ encoded ECDSA Signature\nexport const ECDSASignatureType = new ContainerType({\n  yParity: new BooleanType(),\n  r: Uint256,\n  s: Uint256,\n})\n\n// SSZ encoded signed blob transaction\nexport const SignedBlobTransactionType = new ContainerType({\n  message: BlobTransactionType,\n  signature: ECDSASignatureType,\n})\n\n// SSZ encoded KZG Commitment/Proof (48 bytes)\nexport const KZGCommitmentType = Bytes48\nexport const KZGProofType = KZGCommitmentType\n\n// SSZ encoded blob network transaction wrapper\nexport const BlobNetworkTransactionWrapper = new ContainerType({\n  tx: SignedBlobTransactionType,\n  blobKzgs: new ListCompositeType(KZGCommitmentType, MAX_TX_WRAP_KZG_COMMITMENTS),\n  blobs: new ListCompositeType(\n    new ByteVectorType(FIELD_ELEMENTS_PER_BLOB * BYTES_PER_FIELD_ELEMENT),\n    LIMIT_BLOBS_PER_TX\n  ),\n  kzgAggregatedProof: KZGProofType,\n})\n","import { bufferToHex, setLengthLeft, toBuffer } from '@ethereumjs/util'\n\nimport { isAccessList } from './types'\n\nimport type { BlobEIP4844Transaction } from './eip4844Transaction'\nimport type { AccessList, AccessListBuffer, AccessListItem } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize')\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length !== 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length !== 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost)\n  }\n}\n\nexport const blobTxToNetworkWrapperDataFormat = (tx: BlobEIP4844Transaction) => {\n  const to = {\n    selector: tx.to !== undefined ? 1 : 0,\n    value: tx.to?.toBuffer() ?? null,\n  }\n  return {\n    message: {\n      chainId: tx.common.chainId(),\n      nonce: tx.nonce,\n      maxPriorityFeePerGas: tx.maxPriorityFeePerGas,\n      maxFeePerGas: tx.maxFeePerGas,\n      gas: tx.gasLimit,\n      to,\n      value: tx.value,\n      data: tx.data,\n      accessList: tx.accessList.map((listItem) => {\n        return { address: listItem[0], storageKeys: listItem[1] }\n      }),\n      blobVersionedHashes: tx.versionedHashes,\n      maxFeePerDataGas: tx.maxFeePerDataGas,\n    },\n    // If transaction is unsigned, signature fields will be initialized to zeroes\n    signature: {\n      r: tx.r ?? BigInt(0),\n      s: tx.s ?? BigInt(0),\n      yParity: tx.v === BigInt(1) ? true : false,\n    },\n  }\n}\n","import { sha256 } from 'ethereum-cryptography/sha256'\n\nimport { kzg } from '../kzg/kzg'\n\n/**\n * These utilities for constructing blobs are borrowed from https://github.com/Inphi/eip4844-interop.git\n */\nconst BYTES_PER_FIELD_ELEMENT = 32\nconst FIELD_ELEMENTS_PER_BLOB = 4096\nconst USEFUL_BYTES_PER_BLOB = 32 * FIELD_ELEMENTS_PER_BLOB\nconst MAX_BLOBS_PER_TX = 2\nconst MAX_USEFUL_BYTES_PER_TX = USEFUL_BYTES_PER_BLOB * MAX_BLOBS_PER_TX - 1\nconst BLOB_SIZE = BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB\n\nfunction get_padded(data: Buffer, blobs_len: number) {\n  const pdata = Buffer.alloc(blobs_len * USEFUL_BYTES_PER_BLOB)\n  const datalen = Buffer.byteLength(data)\n  pdata.fill(data, 0, datalen)\n  pdata[datalen] = 0x80\n  return pdata\n}\n\nfunction get_blob(data: Buffer) {\n  const blob = Buffer.alloc(BLOB_SIZE, 'binary')\n  for (let i = 0; i < FIELD_ELEMENTS_PER_BLOB; i++) {\n    const chunk = Buffer.alloc(32, 'binary')\n    chunk.fill(data.subarray(i * 31, (i + 1) * 31), 0, 31)\n    blob.fill(chunk, i * 32, (i + 1) * 32)\n  }\n\n  return blob\n}\n\nexport const getBlobs = (input: string) => {\n  const data = Buffer.from(input, 'binary')\n  const len = Buffer.byteLength(data)\n  if (len === 0) {\n    throw Error('invalid blob data')\n  }\n  if (len > MAX_USEFUL_BYTES_PER_TX) {\n    throw Error('blob data is too large')\n  }\n\n  const blobs_len = Math.ceil(len / USEFUL_BYTES_PER_BLOB)\n\n  const pdata = get_padded(data, blobs_len)\n\n  const blobs = []\n  for (let i = 0; i < blobs_len; i++) {\n    const chunk = pdata.subarray(i * USEFUL_BYTES_PER_BLOB, (i + 1) * USEFUL_BYTES_PER_BLOB)\n    const blob = get_blob(chunk)\n    blobs.push(blob)\n  }\n\n  return blobs\n}\n\nexport const blobsToCommitments = (blobs: Buffer[]) => {\n  const commitments = []\n  for (const blob of blobs) {\n    commitments.push(Buffer.from(kzg.blobToKzgCommitment(blob)))\n  }\n  return commitments\n}\n\n/**\n * Converts a vector commitment for a given data blob to its versioned hash.  For 4844, this version\n * number will be 0x01 for KZG vector commitments but could be different if future vector commitment\n * types are introduced\n * @param commitment a vector commitment to a blob\n * @param blobCommitmentVersion the version number corresponding to the type of vector commitment\n * @returns a versioned hash corresponding to a given blob vector commitment\n */\nexport const computeVersionedHash = (commitment: Uint8Array, blobCommitmentVersion: number) => {\n  const computedVersionedHash = new Uint8Array(32)\n  computedVersionedHash.set([blobCommitmentVersion], 0)\n  computedVersionedHash.set(sha256(commitment).slice(1), 1)\n  return computedVersionedHash\n}\n\n/**\n * Generate an array of versioned hashes from corresponding kzg commitments\n * @param commitments array of kzg commitments\n * @returns array of versioned hashes\n * Note: assumes KZG commitments (version 1 version hashes)\n */\nexport const commitmentsToVersionedHashes = (commitments: Buffer[]) => {\n  const hashes = []\n  for (const commitment of commitments) {\n    hashes.push(Buffer.from(computeVersionedHash(commitment, 0x01)))\n  }\n  return hashes\n}\n","export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport type EthEncryptedData = {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n};\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array: Uint8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && data && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const receiverPrivateKeyUint8Array = naclDecodeHex(privateKey);\n      const receiverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        receiverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        receiverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      try {\n        if (!decryptedMessage) {\n          throw new Error();\n        }\n        const output = naclUtil.encodeUTF8(decryptedMessage);\n        // TODO: This is probably extraneous but was kept to minimize changes during refactor\n        if (!output) {\n          throw new Error();\n        }\n        return output;\n      } catch (err) {\n        if (err && typeof err.message === 'string' && err.message.length) {\n          throw new Error(`Decryption failed: ${err.message as string}`);\n        }\n        throw new Error(`Decryption failed.`);\n      }\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = naclDecodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction naclDecodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","/* eslint jsdoc/require-description: 0 */\n/* eslint jsdoc/require-returns: 0 */\n/* eslint jsdoc/match-description: 0 */\n/* eslint jsdoc/require-param-description: 0 */\n\nimport {\n  ToBufferInputTypes,\n  toBuffer,\n  setLengthRight,\n  setLengthLeft,\n  isHexPrefixed,\n  zeros,\n} from '@ethereumjs/util';\nimport BN from 'bn.js';\nimport { stripHexPrefix } from 'ethjs-util';\n\nimport { normalize } from './utils';\n\n//\n// Methods borrowed and somewhat adapted from ethereumjs-abi@0.6.8:\n// https://npmfs.com/package/ethereumjs-abi/0.6.8/lib/index.js\n//\n\n/**\n * Packs non-standard encoded values packed according to their respective type in types in a buffer.\n *\n * @param types - Array of types of each value to encode.\n * @param values - Array of values to encode.\n * @returns A buffer containing the packed values.\n */\nexport function solidityPack(types: string[], values: any[]): Buffer {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values');\n  }\n\n  const ret: Buffer[] = [];\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    ret.push(solidityHexValue(type, value, null));\n  }\n\n  return Buffer.concat(ret);\n}\n\n/**\n * Checks if a value is an array (represented as a string).\n *\n * @param type - The value to check whether it is an array.\n * @returns A boolean indicating whether the passed value is an array.\n */\nfunction isArray(type: string): boolean {\n  return type.endsWith(']');\n}\n\n/**\n * Parse array type for packing solidity values.\n *\n * @param type - A string that may be an array to parse.\n * @returns A parsed value from the array.\n */\nfunction parseTypeArray(type: string): 'dynamic' | number | null {\n  const tmp = type.match(/(.*)\\[(.*?)\\]$/u);\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n  }\n  return null;\n}\n\n/**\n * Parse N from type<N>.\n *\n * @param type - Value to parse.\n * @returns Parsed value.\n */\nfunction parseTypeN(type: string): number {\n  const match = /^\\D+(\\d+)$/u.exec(type);\n  if (match === null) {\n    throw new Error(`Invalid parseTypeN input \"${type}\".`);\n  }\n  return parseInt(match[1], 10);\n}\n\n/**\n * Parse a number for determining a solidity hexvalue.\n *\n * @param arg - Number to parse.\n * @returns Parsed value.\n */\nexport function parseNumber(arg: string | number | BN): BN {\n  const type = typeof arg;\n  if (type === 'string') {\n    if (isHexPrefixed(arg as string)) {\n      return new BN(stripHexPrefix(arg), 16);\n    }\n    return new BN(arg, 10);\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (\n    (arg && Object.prototype.hasOwnProperty.call(arg, 'toArray')) ||\n    BN.isBN(arg)\n  ) {\n    return arg as BN;\n  }\n  throw new Error('Argument is not a number');\n}\n\n/**\n * Get solidity hex value from type, value and bitsize inputs for packing these values in a buffer.\n *\n * @param type - The type of the value to encode.\n * @param value - The value to encode.\n * @param bitsize - The bitsize of the value to encode.\n * @returns The encoded soldity hex value.\n */\nfunction solidityHexValue(\n  type: string,\n  value: ToBufferInputTypes,\n  bitsize: number | null,\n): Buffer {\n  // pass in bitsize = null if use default bitsize\n  if (isArray(type)) {\n    const subType = type.replace(/\\[.*?\\]/u, '');\n    if (!isArray(subType)) {\n      const arraySize = parseTypeArray(type);\n      if (\n        arraySize !== 'dynamic' &&\n        arraySize !== 0 &&\n        arraySize !== null &&\n        (value as any[]).length > arraySize\n      ) {\n        throw new Error(`Elements exceed array size: ${arraySize}`);\n      }\n    }\n    const arrayValues = (value as number[]).map((v) =>\n      solidityHexValue(subType, v, 256),\n    );\n    return Buffer.concat(arrayValues);\n  } else if (type === 'bytes') {\n    return value as Buffer;\n  } else if (type === 'string') {\n    return Buffer.from(value as string, 'utf8');\n  } else if (type === 'bool') {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || 8;\n    const padding = Array(bitsize / 4).join('0');\n    return Buffer.from(value ? `${padding}1` : `${padding}0`, 'hex');\n  } else if (type === 'address') {\n    let bytesize = 20;\n    if (bitsize) {\n      bytesize = bitsize / 8;\n    }\n    return setLengthLeft(toBuffer(value), bytesize);\n  } else if (type.startsWith('bytes')) {\n    const size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    if (typeof value === 'number') {\n      value = normalize(value);\n    }\n    return setLengthRight(toBuffer(value), size);\n  } else if (type.startsWith('uint')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    const num = parseNumber(value as number);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || size;\n    return num.toArrayLike(Buffer, 'be', bitsize / 8);\n  } else if (type.startsWith('int')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    const num = parseNumber(value as number);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    bitsize = bitsize || size;\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8);\n  }\n  // FIXME: support all other types\n  throw new Error(`Unsupported or invalid type: ${JSON.stringify(type)}`);\n}\n\n/**\n * Gets the correct solidity type name.\n *\n * @param name - The type name for which we want the corresponding solidity type name.\n * @returns The solidity type name for the input value.\n */\nfunction elementaryName(name: string): string {\n  if (name.startsWith('int[')) {\n    return `int256${name.slice(3)}`;\n  } else if (name === 'int') {\n    return 'int256';\n  } else if (name.startsWith('uint[')) {\n    return `uint256${name.slice(4)}`;\n  } else if (name === 'uint') {\n    return 'uint256';\n  } else if (name.startsWith('fixed[')) {\n    return `fixed128x128${name.slice(5)}`;\n  } else if (name === 'fixed') {\n    return 'fixed128x128';\n  } else if (name.startsWith('ufixed[')) {\n    return `ufixed128x128${name.slice(6)}`;\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128';\n  }\n  return name;\n}\n\n/**\n * @param types\n * @param values\n */\nexport function rawEncode(\n  types: string[],\n  values: (BN | Buffer | string | number | string[] | number[])[],\n): Buffer {\n  const output: Buffer[] = [];\n  const data: Buffer[] = [];\n\n  let headLength = 0;\n\n  types.forEach((type) => {\n    if (isArray(type)) {\n      const size: number | 'dynamic' | null = parseTypeArray(type);\n      // eslint-disable-next-line no-negated-condition\n      if (size !== 'dynamic' && size !== null) {\n        headLength += 32 * size;\n      } else {\n        headLength += 32;\n      }\n    } else {\n      headLength += 32;\n    }\n  });\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    const cur = encodeSingle(type, value);\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength));\n      data.push(cur);\n      headLength += cur.length;\n    } else {\n      output.push(cur);\n    }\n  }\n\n  return Buffer.concat(output.concat(data));\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\n/**\n * @param type\n * @param arg\n */\nfunction encodeSingle(\n  type: string,\n  arg: BN | Buffer | string | number | string[] | number[],\n): Buffer {\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg as string));\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0);\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg as string, 'utf8'));\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof (arg as any).length === 'undefined') {\n      throw new Error('Not an array?');\n    }\n    const size = parseTypeArray(type);\n    if (\n      size !== 'dynamic' &&\n      size !== 0 &&\n      size !== null &&\n      (arg as any).length > size\n    ) {\n      throw new Error(`Elements exceed array size: ${size}`);\n    }\n    const ret: Buffer[] = [];\n    type = type.slice(0, type.lastIndexOf('['));\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg);\n    }\n\n    // TODO: if this is array, should do for-of\n    for (const i in arg as Record<string, any>) {\n      if (Object.prototype.hasOwnProperty.call(arg, i)) {\n        ret.push(encodeSingle(type, arg[i]));\n      }\n    }\n\n    if (size === 'dynamic') {\n      const length = encodeSingle('uint256', (arg as any).length);\n      ret.unshift(length);\n    }\n    return Buffer.concat(ret);\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg as Buffer);\n\n    let ret = Buffer.concat([encodeSingle('uint256', arg.length), arg]);\n\n    if (arg.length % 32 !== 0) {\n      ret = Buffer.concat([ret, zeros(32 - (arg.length % 32))]);\n    }\n\n    return ret;\n  } else if (type.startsWith('bytes')) {\n    const size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    // TODO: fix types here\n    const nArg = typeof arg === 'number' ? normalize(arg) : arg;\n    return setLengthRight(toBuffer(nArg as string), 32);\n  } else if (type.startsWith('uint')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    const num = parseNumber(arg as string);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    if (num.isNeg()) {\n      throw new Error('Supplied uint is negative');\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('int')) {\n    const size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    const num = parseNumber(arg as string);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('ufixed')) {\n    const size = parseTypeNxM(type);\n\n    const num = parseNumber(arg as string);\n\n    if (num.isNeg()) {\n      throw new Error('Supplied ufixed is negative');\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))));\n  } else if (type.startsWith('fixed')) {\n    const size = parseTypeNxM(type);\n\n    return encodeSingle(\n      'int256',\n      parseNumber(arg as string).mul(new BN(2).pow(new BN(size[1]))),\n    );\n  }\n\n  throw new Error(`Unsupported or invalid type: ${JSON.stringify(type)}`);\n}\n\n// Is a type dynamic?\n/**\n * @param type\n */\nfunction isDynamic(type: string): boolean {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (\n    type === 'string' || type === 'bytes' || parseTypeArray(type) === 'dynamic'\n  );\n}\n\n// Parse N,M from type<N>x<M>\n/**\n * @param type\n */\nfunction parseTypeNxM(type: string): [number, number] {\n  const match = /^\\D+(\\d+)x(\\d+)$/u.exec(type);\n  if (match === null || match.length < 1) {\n    throw new Error(`Invalid parseTypeNxM input \"${type}\".`);\n  }\n  return [parseInt(match[1], 10), parseInt(match[2], 10)];\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n  ToBufferInputTypes,\n} from '@ethereumjs/util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: ToBufferInputTypes;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(\n  message: ToBufferInputTypes,\n  signature: string,\n): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  arrToBufArr,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n} from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak';\nimport { isHexString } from 'ethjs-util';\n\nimport { rawEncode, solidityPack } from './ethereumjs-abi-utils';\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n  numberToBuffer,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport type TypedDataV1Field = {\n  name: string;\n  type: string;\n  value: any;\n};\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport type MessageTypeProperty = {\n  name: string;\n  type: string;\n};\n\nexport type MessageTypes = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n};\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport type TypedMessage<T extends MessageTypes> = {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n};\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  // TODO: constrain type on `value`\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: Buffer | string] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      // TODO: return Buffer, remove string from return type\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : arrToBufArr(keccak256(encodeData(type, value, types, version))),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else if (isHexString(value)) {\n      const prepend = value.length % 2 ? '0' : '';\n      value = Buffer.from(prepend + (value as string).slice(2), 'hex');\n    } else {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type === 'string') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else {\n      value = Buffer.from(value ?? '', 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.endsWith(']')) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      arrToBufArr(\n        keccak256(\n          rawEncode(\n            typeValuePairs.map(([t]) => t),\n            typeValuePairs.map(([, v]) => v),\n          ),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: (Buffer | string)[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  if (typeof primaryType !== 'string') {\n    throw new Error(\n      `Invalid findTypeDependencies input ${JSON.stringify(primaryType)}`,\n    );\n  }\n  const match = primaryType.match(/^\\w*/u) as RegExpMatchArray;\n  [primaryType] = match;\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encoded = encodeData(primaryType, data, types, version);\n  const hashed = keccak256(encoded);\n  const buf = arrToBufArr(hashed);\n  return buf;\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  const encodedHashType = Buffer.from(encodeType(primaryType, types), 'utf-8');\n  return arrToBufArr(keccak256(encodedHashType));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    // TODO: Fix types\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types } as any;\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const { domain } = sanitizedData;\n  const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n  return hashStruct('EIP712Domain', domain, domainType, version);\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(eip712DomainHash(typedData, version));\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return arrToBufArr(keccak256(Buffer.concat(parts)));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n  eip712DomainHash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return arrToBufArr(\n    keccak256(\n      solidityPack(\n        ['bytes32', 'bytes32'],\n        [\n          keccak256(\n            solidityPack(new Array(typedData.length).fill('string'), schema),\n          ),\n          keccak256(solidityPack(types, data)),\n        ],\n      ),\n    ),\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  ToBufferInputTypes,\n  toUnsigned,\n} from '@ethereumjs/util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string | undefined {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    if (input < 0) {\n      return '0x';\n    }\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input as any as string}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n\n/**\n * Node's Buffer.from() method does not seem to buffer numbers correctly out of the box.\n * This helper method formats the number correct for Buffer.from to return correct buffer.\n *\n * @param num - The number to convert to buffer.\n * @returns The number in buffer form.\n */\nexport function numberToBuffer(num: number) {\n  const hexVal = num.toString(16);\n  const prepend = hexVal.length % 2 ? '0' : '';\n  return Buffer.from(prepend + hexVal, 'hex');\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId,\n              chainName: displayName,\n              rpcUrls: [rpcTarget],\n              blockExplorerUrls: [currentChainConfig.blockExplorer],\n              nativeCurrency: {\n                name: currentChainConfig.tickerName,\n                symbol: currentChainConfig.ticker,\n                decimals: currentChainConfig.decimals || 18,\n              },\n            },\n          ],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [\n          {\n            chainId: chainConfig.chainId,\n            chainName: displayName,\n            rpcUrls: [rpcTarget],\n            blockExplorerUrls: [chainConfig.blockExplorer],\n            nativeCurrency: {\n              name: chainConfig.tickerName,\n              symbol: chainConfig.ticker,\n              decimals: chainConfig.decimals || 18,\n            },\n          },\n        ],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import { stripHexPrefix } from \"@ethereumjs/util\";\nimport BigNumber from \"bignumber.js\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { isValidAddress } from \"@ethereumjs/util\";\nimport { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport { privateToAddress, stripHexPrefix } from \"@ethereumjs/util\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { BigNumber } from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { Common, Hardfork } from \"@ethereumjs/common\";\nimport { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"./utils\");\nexports.sha256 = (0, utils_1.wrapHash)(sha256_1.sha256);\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["util_1","require","crc_32_1","events_1","goerli","mainnet","rinkeby","ropsten","sepolia","eips_1","enums_1","hardforks_1","utils_1","Common","_events_1$EventEmitte","_inherits","_super","_createSuper","opts","_opts$customChains","_this$_chainParams$de","_this","_classCallCheck","call","_eips","_customChains","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","defaultHardfork","Hardfork","Merge","HARDFORK_CHANGES","hardforks","map","hf","name","_hardfork","undefined","hardfork","setHardfork","eips","setEIPs","_createClass","key","value","this","_getChainParams","Error","length","_i","_required","param","concat","_step","_iterator","_createForOfIteratorHelper","s","n","done","block","err","e","f","_step2","existing","_iterator2","emit","blockNumber","td","timestamp","toType","TypeOutput","BigInt","Number","hfs","filter","ttd","mergeIndex","findIndex","slice","hfIndex","reverse","hfStartIndex","reduce","acc","_hf$timestamp","Math","max","_hf$timestamp2","min","getHardforkByBlockNumber","_step3","_iterator3","_step4","arguments","_iterator4","eip","EIPs","minHF","gteHardfork","requiredEIPs","_step5","_iterator5","elem","includes","isActivatedEIP","topic","_step6","_iterator6","paramByEIP","paramByHardfork","_value","_step7","_iterator7","hfChanges","_step8","hfEIPs","_iterator8","valueEIP","v","eipParams","_step9","_iterator9","hfBlock","hardforkBlock","hardforkIsActiveOnBlock","hardfork1","hardfork2","_hardfork2","_step10","posHf1","posHf2","index","_iterator10","hardforkGteHardfork","_hardfork3","_this$_getHardfork","_getHardfork","_hardfork4","_this$_getHardfork2","_step11","_iterator11","_hardfork5","_this$_getHardfork3","_hardfork6","_hardfork7","_hfs$hfIndex$timestam","_nextHf$timestamp","currHfTimeOrBlock","nextHf","find","_hf$timestamp3","hfTimeOrBlock","nextHfBlock","_hardfork8","_hardfork9","nextHardforkBlock","genesisHash","_step12","hfBuffer","Buffer","alloc","prevBlockOrTime","_iterator12","blockOrTime","hfBlockBuffer","from","toString","padStart","inputBuffer","forkhash","intToBuffer","buf","_hardfork10","data","forkHash","_calcForkHash","resArray","_step13","_iterator13","_hf$timestamp4","genesis","bootstrapNodes","dnsNetworks","chainId","networkId","_value2","_step14","_iterator14","_value3","_step15","_iterator15","_ref","_value4","_step16","_iterator16","consensusAlgorithm","copy","Object","assign","create","getPrototypeOf","removeAllListeners","chainParamsOrName","_opts$baseChain","baseChain","standardChainParams","_objectSpread","CustomChain","PolygonMainnet","custom","PolygonMumbai","ArbitrumRinkebyTestnet","ArbitrumOne","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","genesisJson","_ref2","_genesisParams$name","mergeForkIdPostMerge","genesisParams","parseGethGenesis","common","setForkHashes","initializedChains","_getInitializedChains","Boolean","names","_i2","_Object$entries","entries","Chain","_Object$entries$_i","_slicedToArray","toLowerCase","chains","_step17","_iterator17","EventEmitter","exports","ConsensusType","ConsensusAlgorithm","chainstart","homestead","dao","tangerineWhistle","spuriousDragon","byzantium","constantinople","petersburg","istanbul","muirGlacier","berlin","london","shanghai","arrowGlacier","grayGlacier","mergeForkIdTransition","merge","shardingFork","__exportStar","parseGethParams","json","_config$clique$period","_config$clique$epoch","_forkMap","config","difficulty","mixHash","gasLimit","coinbase","baseFeePerGas","extraData","nonce","genesisTimestamp","isHexPrefixed","intToHex","parseInt","stripHexPrefix","formatNonce","eip155Block","eip158Block","params","consensus","clique","type","algorithm","period","blockperiodseconds","epoch","epochlength","ethash","forkMap","_defineProperty","Homestead","Dao","TangerineWhistle","SpuriousDragon","Byzantium","Constantinople","Petersburg","Istanbul","MuirGlacier","London","MergeForkIdTransition","postMerge","Shanghai","isTimestamp","ShardingForkDev","forkMapRev","keys","configHardforkNames","nameBlock","fork","sort","a","b","_a$block","_b$block","Infinity","_a$timestamp","_b$timestamp","terminalTotalDifficulty","mergeConfig","postMergeIndex","_forkMap$hf$name","splice","push","latestHardfork","unshift","Chainstart","some","field","message","common_1","types_1","util_2","BaseTransaction","txData","_opts$allowUnlimitedI","_opts$common","cache","hash","dataFee","activeCapabilities","DEFAULT_CHAIN","Mainnet","to","r","_type","bufferToBigInt","toBuffer","txOptions","toB","vB","rB","sB","Address","_validateCannotExceedMaxInteger","createContract","allowUnlimitedInitCodeSize","_getCommon","checkMaxInitCodeSize","get","capability","stringError","errors","getBaseFee","isSigned","verifySignature","msg","_errorMsg","SECP256K1_ORDER_DIV_2","txFee","fee","getDataFee","toCreationAddress","txCreationFee","txDataZero","txDataNonZero","cost","i","dataLength","ceil","publicKey","getSenderPublicKey","unpadBuffer","publicToAddress","privateKey","hackApplied","supports","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","chainIdBigInt","isSupportedChainId","_common$copy","values","bits","cannotEqual","MAX_UINT64","MAX_INTEGER","bufferToHex","postfix","txDataKeys","_Object$entries2","_Object$entries2$_i","Array","isArray","rlp_1","keccak_1","baseTransaction_1","TRANSACTION_TYPE_BUFFER","FeeMarketEIP1559Transaction","_baseTransaction_1$Ba","_opts$freeze","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","_validateNotArray","_validateYParity","_validateHighS","freeze","_assertThisInitialized","_get","_getPrototypeOf","prototype","getDataFeeEIP2930","isFrozen","baseFee","prio","maxBase","gasPrice","bigIntToUnpaddedBuffer","base","raw","RLP","encode","bufArrToArr","hashMessage","keccak256","serialize","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","bigIntToHex","errorStr","_getSharedErrorPostfix","serialized","equals","arrToBufArr","decode","fromValuesArray","_values","validateNoLeadingZeroes","AccessListEIP2930Transaction","_this$accessList$leng","_this$accessList","Uint8Array","ssz_1","constants_1","kzg_1","blobHelpers_1","BlobEIP4844Transaction","_txData$versionedHash","_txData$blobs","_txData$kzgCommitment","maxFeePerDataGas","versionedHashes","vh","LIMIT_BLOBS_PER_TX","blobs","blob","kzgCommitments","commitment","aggregateKzgProof","kzgProof","_this$to$toBuffer","_this$to","_this$r","_this$s","selector","gas","listItem","address","storageKeys","blobVersionedHashes","signature","yParity","sszEncodedTx","SignedBlobTransactionType","toValue","_this$to$toBuffer2","_this$to2","_this$blobs$map","_this$blobs","_this$kzgCommitments$","_this$kzgCommitments","_this$aggregateKzgPro","blobArrays","serializedTxWrapper","BlobNetworkTransactionWrapper","blobKzgs","blobTxToNetworkWrapperDataFormat","kzgAggregatedProof","_hashMessage","unsignedHash","serializedTx","BlobTransactionType","wrapper","deserialize","decodedTx","version","commitments","kzg","verifyAggregateKzgProof","x","computedVersionedHash","computeVersionedHash","byteArrayEquals","validateBlobTransactionNetworkWrapper","accessListItem","fromString","el","decoded","_txParams","_txParams$gasLimit","txParams","input","setLengthLeft","eip1559Transaction_1","enumerable","eip2930Transaction_1","eip4844Transaction_1","initKZG","legacyTransaction_1","Transaction","transactionFactory_1","TransactionFactory","kzgNotLoaded","freeTrustedSetup","loadTrustedSetup","blobToKzgCommitment","computeAggregateKzgProof","verifyKzgProof","kzgLib","trustedSetupPath","meetsEIP155","_v","chainIdDoubled","_validateTxV","_getMessageToSign","numSub","fromRpc_1","txType","fromSerializedTx","isBuffer","fromSerializedData","_fromEthersProvider","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","txHash","prov","wrap","_context","prev","next","getProvider","fetchFromProvider","method","sent","abrupt","fromRPCTx","stop","_x","_x2","_x3","apply","_fromRPCTx","_callee2","_args2","_context2","normalizeTxParams","_x4","Bytes20","ByteVectorType","Bytes32","Bytes48","Uint64","UintBigintType","Uint256","isAccessListBuffer","firstItem","ContainerType","AddressType","ListCompositeType","MAX_VERSIONED_HASHES_LIST_SIZE","UnionType","NoneType","ByteListType","MAX_CALLDATA_SIZE","AccessTupleType","MAX_ACCESS_LIST_SIZE","BooleanType","ECDSASignatureType","KZGCommitmentType","MAX_TX_WRAP_KZG_COMMITMENTS","FIELD_ELEMENTS_PER_BLOB","BYTES_PER_FIELD_ELEMENT","KZGProofType","maxInitCodeSize","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","storageItems","jsonItem","storageSlots","storageSlot","JSONItem","slot","accessListStorageKeyCost","accessListAddressCost","slots","_tx$to$toBuffer","_tx$to","_tx$r","_tx$s","sha256_1","USEFUL_BYTES_PER_BLOB","get_blob","chunk","fill","subarray","len","byteLength","blobs_len","pdata","datalen","get_padded","blobCommitmentVersion","set","sha256","hashes","output","outputLength","encoded","concatBytes","encodeLength","inputBuf","toBytes","safeSlice","start","end","decodeLength","parseHexByte","bytesToHex","offset","hexLength","numberToHex","firstByte","hexToBytes","stream","_decode","remainder","llength","innerRemainder","d","totalLength","cachedHexes","uint8a","hex","hexByte","byte","isNaN","TypeError","array","j","_len","arrays","_key","arr","result","pad","utf8ToBytes","utf","TextEncoder","integer","str","nacl","__importStar","naclUtil","encrypt","isNullish","pubKeyUInt8Array","ephemeralKeyPair","box","keyPair","decodeBase64","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","_ref3","encryptedData","receiverPrivateKeyUint8Array","naclDecodeHex","receiverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","pow","dataWithPadding","padding","modVal","JSON","stringify","padLength","repeat","_ref4","parse","privateKeyUint8Array","encryptionPublicKey","bn_js_1","__importDefault","ethjs_util_1","endsWith","parseTypeArray","tmp","match","parseTypeN","exec","parseNumber","arg","default","hasOwnProperty","isBN","solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","join","bytesize","startsWith","size","normalize","setLengthRight","num","bitLength","toArrayLike","toTwos","elementaryName","encodeSingle","ret","lastIndexOf","zeros","nArg","isNeg","parseTypeNxM","mul","isDynamic","types","headLength","forEach","cur","concatSig","getPublicKeyFor","messageHash","hashPersonalMessage","legacyToBuffer","recoverPublicKey","sig","sender","SignTypedDataVersion","ethereumjs_abi_utils_1","validateVersion","allowedVersions","encodeField","V3","V4","encodeData","numberToBuffer","isHexString","prepend","parsedType","typeValuePairs","rawEncode","primaryType","encodedTypes","encodedValues","hashType","_encodeField","_encodeField2","encodeType","unsortedDeps","findTypeDependencies","delete","deps","_toConsumableArray","_ref5","t","results","Set","has","add","hashStruct","hashed","encodedHashType","sanitizeData","sanitizedData","TYPED_MESSAGE_SCHEMA","properties","EIP712Domain","eip712DomainHash","typedData","domain","_typedSignatureHash","error","schema","solidityPack","additionalProperties","items","required","eip712Hash","parts","hashBuffer","_ref6","V1","TypedDataUtils","_ref7","padWithZeroes","hexString","targetLength","test","String","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","toUnsigned","sStr","vStr","addHexPrefix","sigParams","fromRpcSig","buffer","hexVal","module","assert","val","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","endian","negative","words","red","_init","wordSize","window","parseHex4Bits","string","c","charCodeAt","lowerBound","parseBase","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","dest","clone","_expand","_normSign","inspect","groupSizes","groupBases","smallMulTo","self","out","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","toJSON","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","outLen","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","resemblesAddress","createWalletMiddleware","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","_validateAndNormalizeKeyholder","req","accounts","normalizedAccounts","normalizedAddress","_address","ethErrors","rpc","invalidParams","_lookupAccounts","_lookupDefaultAccount","_callee3","_context3","_sendTransaction","_callee4","_context4","methodNotSupported","_signTransaction","_callee5","_context5","_ethSign","_callee6","extraParams","msgParams","_context6","_objectSpread$5","_signTypedData","_callee7","_context7","_signTypedDataV","_callee8","_context8","_signTypedDataV2","_callee9","_context9","_personalSign","_callee10","firstParam","secondParam","_context10","warning","_encryptionPublicKey","_callee11","_context11","_decryptMessage","_callee12","_context12","fetchPrivateKey","_x25","_x26","_fetchPrivateKey","_callee13","_context13","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","private_key","eth_coinbase","_x5","_x6","eth_sendTransaction","_x7","_x8","eth_signTransaction","_x9","_x10","eth_sign","_x11","_x12","eth_signTypedData","_x13","_x14","eth_signTypedData_v3","_x15","_x16","eth_signTypedData_v4","_x17","_x18","personal_sign","_x19","_x20","eth_getEncryptionPublicKey","_x21","_x22","eth_decrypt","_x23","_x24","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getProviderHandlers$1","connector","_getPrivateKey","_callee17","_context17","_getAccounts","_callee18","_context18","_x33","_processTransaction","_callee19","_context19","sendTransaction","_x34","_x35","_processSignTransaction","_callee20","_context20","signTransaction","_x36","_x37","_processEthSignMessage","_callee21","_context21","signMessage","_x38","_x39","_processPersonalMessage","_callee22","_context22","signPersonalMessage","_x40","_x41","_processTypedMessage","_callee23","_context23","signTypedData","_x42","_x43","_processTypedMessageV","_callee24","_context24","_x44","_processTypedMessageV2","_callee25","_context25","_x45","_processEncryptionPublicKey","_callee26","_context26","_x46","WalletConnectProvider","_BaseProvider","state","chainConfig","_objectSpread$4","chainNamespace","CHAIN_NAMESPACES","EIP155","skipLookupNetwork","_enable","_callee27","_context27","code","setupProvider","_providerEngineProxy","request","_setupProvider","_callee28","_context28","onConnectorStateUpdate","setupEngine","_x47","_switchChain","_callee29","_ref2$addChain","addChain","_ref2$lookup","lookup","currentChainConfig","displayName","_context29","getChainConfig","update","sendCustomRequest","chainName","rpcUrls","blockExplorerUrls","blockExplorer","nativeCurrency","tickerName","symbol","ticker","decimals","t0","log","t1","configure","lookupNetwork","_x48","_addChain","_callee30","_context30","WalletInitializationError","notReady","_x49","_lookupNetwork","_callee31","connectedHexChainId","_context31","connected","WalletLoginError","notConnectedError","isHexStrict","rpcConnectionError","_x50","_setupEngine","_callee32","ethMiddleware","engine","_createJsonRpcClient","_context32","JRPCEngine","providerFromEngine","updateProviderEngineProxy","_x51","_onConnectorStateUpdate","_callee34","_this2","_context34","on","_callee33","payload","_payload$params$","connectedChainId","rpcUrl","maybeConfig","_context33","_x53","_x54","_x52","BaseProvider","_callee35","providerFactory","_context35","_x55","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","ROUND_HALF_UP","baseChange","conversionUtil","_ref$fromNumericBase","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","ROUND_HALF_DOWN","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","_x56","_fetchEip1159GasEstimates","_callee66","url","estimates","normalizedEstimates","_context66","_objectSpread$3","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","_x57","_fetchLegacyGasPriceEstimates","_callee67","_context67","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","validateTypedMessageParams","parameters","activeChainId","_data$domain","isValidAddress","typedSignatureHash","validation","jsonschema","invalidInput","signTx","_x58","_x59","_x60","_signTx","_callee68","privKey","txFormatter","finalTxParams","unsignedEthTx","signedTx","_context68","formatTransaction","getCommonConfiguration","sign","getProviderHandlers","getProviderEngineProxy","_getAccounts2","_callee36","_context36","privateToAddress","_x61","_getPrivateKey2","_callee37","_context37","_x62","_processTransaction2","_callee38","providerEngineProxy","_context38","_x63","_x64","_processSignTransaction2","_callee39","_context39","_x65","_x66","_processEthSignMessage2","_callee40","rawMessageSig","_context40","_x67","_x68","_processPersonalMessage2","_callee41","privKeyBuffer","_context41","personalSign","_x69","_x70","_processTypedMessage2","_callee42","finalChainId","_context42","debug","_objectSpread$2","_x71","_x72","_processTypedMessageV3","_callee43","_context43","_x73","_x74","_processTypedMessageV4","_callee44","_context44","_x75","_x76","_processEncryptionPublicKey2","_callee45","_context45","info","getEncryptionPublicKey","_x77","_x78","stripped","buff","bnToHex","inputBn","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","_callee46","_context46","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","_getCommonConfiguration","_callee47","_this$chainConfig","customChainParams","_context47","_formatTransaction","_callee48","clonedTxParams","defaultGasLimit","_defaultGasLimit","_yield$this$getDefaul","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","_context48","_objectSpread$1","getDefaultGasLimit","getDefaultGasFees","BigNumber$1","_x79","_fetchEthGasPriceEstimate","_callee49","_context49","_getEIP1559Compatibility","_callee50","latestBlock","supportsEIP1559","_context50","_fetchGasFeeEstimateData","_callee51","isLegacyGasAPICompatible","gasData","_estimates","_estimates2","_context51","gasFeeEstimates","gasEstimateType","fetchEthGasPriceEstimate","_getDefaultGasFees","_callee52","_yield$this$fetchGasF","_gasFeeEstimates$medi","_gasFeeEstimates$medi2","_yield$this$fetchEthG","_context52","fetchGasFeeEstimateData","_x80","_estimateTxGas","_callee53","txMeta","_context53","_x81","_analyzeGasUsage","_callee54","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","_context54","estimateTxGas","warn","blockGasLimit","_x82","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","_determineTransactionCategory","_callee55","txParameters","txCategory","_context55","transactionCategory","_x83","_getDefaultGasLimit","_callee56","_yield$this$determine","_yield$this$analyzeGa","_context56","determineTransactionCategory","analyzeGasUsage","addGasBuffer","_x84","EthereumPrivateKeyProvider","_BaseProvider2","_super2","_enable2","_callee57","_context57","_setupProvider2","_callee58","chainSwitchMiddleware","_createJsonRpcClient2","_context58","bind","getChainSwitchMiddleware","getAccountMiddleware","init","_x85","_updateAccount2","_callee59","_context59","t2","_x86","_switchChain2","_callee60","_context60","_x87","_lookupNetwork2","_callee61","network","_context61","chainDisconnected","_this3","chainSwitchHandlers","_addChain2","_callee62","_context62","_x88","switchChain","_switchChain3","_callee63","_context63","_x89","_addNewChain","_callee14","_req$params","chainParams","_context14","_updateChain","_callee15","_req$params2","_context15","wallet_addEthereumChain","_x27","_x28","wallet_switchEthereumChain","_x29","_x30","createChainSwitchMiddleware","_this4","accountHandlers","updatePrivatekey","_updatePrivatekey","_callee64","_context64","updateAccount","_x90","_updateAccount","_callee16","_req$params3","accountParams","_context16","wallet_updateAccount","_x31","_x32","createAccountMiddleware","_callee65","_context65","_x91","factory","CRC32","T0","table","Int32Array","signed_crc_table","TT","T","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","L","DO_NOT_EXPORT_CRC","defineProperty","wrapHash","padToEven","arrayContainsArray","superset","subset","getBinarySize","fromAscii","stringValue","fromUtf8","toAscii","substring","substr","fromCharCode","toUtf8","getKeys","allowEmpty","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","instance","options","callback","throwError","throwAll","validateSchema","valid","Function","getEnumerableProperty","object","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","testType","list","id","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","count","if","isSchema","ifValid","then","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","RegExp","_e","minProperties","maxProperties","every","additionalItems","contains","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","testArrays","deepCompareStrict","multipleOf","divisibleBy","format","disableFormat","isFormat","minLength","hsp","maxLength","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","path","sum","makeSuffix","stack","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","SchemaContext","schemas","resolve","target","propertyName","FORMAT_REGEXPS","parseFloat","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","decodeURIComponent","encodePath","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","document","isFinite","boolean","date","Date","any","root","util","validateBase64","unescape","escape","atob","btoa","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D2","X","Y","I","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t3","t4","t5","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","pack25519","neq25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","bytes","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","th","tl","wh","wl","pos","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues"],"sourceRoot":""}